{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogut","dispatch","clear","logut","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","uid","msg","setItem","Date","getTime","Swal","fire","placeholder","onChange","displayName","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOne","clone","initEvent","notes","CalendarModal","activeEvent","calendar","modalOpen","ui","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","eventoGuardado","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lasview","setLasview","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52c15123.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n    \n    const url = `${ baseUrl }/${ endpoint }`; \n\n    if( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n    \n    const url = `${ baseUrl }/${ endpoint }`; \n    const token = localStorage.getItem('token') || '';\n\n    if( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","export const types = {\n\n    uiOpenModal: '[UI] Open Modal',\n    uiCloseModal: '[UI] Close Modal',\n\n    eventStartAddnew: '[EVENT] Start add New',\n    eventAddNew: '[EVENT] Add New',\n    eventSetActive: '[EVENT] Set Active',\n    eventClearActiveEnvent: '[EVENT] Clear Active',\n    eventUpdated: '[EVENT] Event Updated',\n    eventDeleted: '[EVENT] Event Deleted',\n    eventLoaded: '[EVENT] Events Loader',\n    eventLogout: '[EVENT] Logout Event',\n\n    authCheckingFinish: '[AUTH] Finish Cheking Login State',\n    authStartLogin: '[AUTH] Start Login',\n    authLogin: '[AUTH] Login',\n    authStartRegister: '[AUTH] Start Register',\n    authStartRegisterRenew: '[AUTH] Start Register Renew',\n    authLogout: '[AUTH] Logout'\n}\n","import moment from 'moment';\n\nexport const prepareEvents = ( events = [] ) => {\n\n    return events.map( \n        e => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n            start: moment( e.start ).toDate()\n        })\n    );\n}","import Swal from \"sweetalert2\";\nimport { types } from \"../types/types\";\nimport { fetchConToken } from '../helpers/fetch';\nimport { prepareEvents } from \"../helpers/prepareEvents\";\n\nexport const eventStartAddNew = ( event ) => {\n    return async ( dispatch, getState ) => {\n        \n        const { uid, name } = getState().auth;\n        try {\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            if( body.ok ) {\n                event.id = body.eventoGuardado.id;\n\n                event.user = {\n                    _id: uid,\n                    name\n                }\n\n                dispatch( eventAddNew( event ) );\n            }\n        } catch (error) {\n            console.log( error );\n        }\n        \n    }\n}\n\nconst eventAddNew = ( event ) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = ( event ) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({type: types.eventClearActiveEnvent});\n\nexport const eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDelete = () => {\n    return async( dispatch, getState ) => {\n\n        const { id } = getState().calendar.activeEvent;\n        try {\n            \n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if( body.ok ) {\n                dispatch( eventDeleted( id ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n        } catch (error) {\n            console.log( error )\n        }\n    }\n}\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\nexport const eventStartUpdate = ( event ) => {\n    return async ( dispatch ) => {\n\n        try {\n            \n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n\n            if( body.ok ) {\n                dispatch( eventUpdated( event ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n        } catch (error) {\n            console.log( error );\n        }\n    }\n}\n\nexport const eventStartLoading = () => {\n    return async ( dispatch ) => {\n        \n        try {\n            const resp = await fetchConToken('events');\n            const body = await resp.json();\n\n            const events = prepareEvents( body.eventos );\n\n            dispatch( eventLoaded( events ) );\n        } catch (error) {\n            console.log( error );\n        }\n\n    }\n}\n\nconst eventLoaded = ( events ) => ({\n    type: types.eventLoaded,\n    payload: events\n\n})\n\nexport const eventLogut = () => ({ type: types.eventLogout })","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport { eventLogut } from \"./events\";\n\nexport const startLogin = ( email, password ) => {\n    return async ( dispatch ) => {\n        \n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST');\n        const { ok, token, uid, name, msg } = await resp.json();\n\n        if( ok ) {\n            localStorage.setItem('token', token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n            dispatch( login({\n                uid,\n                name \n            }));\n        } else {\n            Swal.fire('Error', msg, 'error' );\n        }\n    }\n}\n\nexport const startRegister = ( email, password, name ) => {\n    return async ( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST');\n        const { ok, token, uid, name:displayName, msg } = await resp.json();\n\n        if( ok ) {\n            localStorage.setItem('token', token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n            dispatch( login({\n                uid,\n                name: displayName\n            }));\n        } else {\n            Swal.fire('Error', msg, 'error' );\n        }\n    }\n}\n\nexport const startChecking = () => {\n    return async ( dispatch ) => {\n\n        const resp = await fetchConToken( 'auth/renew');\n        const { ok, token, uid, name:displayName, msg } = await resp.json();\n\n        if( ok ) {\n            localStorage.setItem('token', token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n            dispatch( login({\n                uid,\n                name: displayName\n            }));\n        } else {\n            Swal.fire('Error', msg, 'error' );\n            dispatch( checkingFinish() );\n        }\n    }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nexport const startLogut = () => {\n    return ( dispatch ) => {\n\n        localStorage.clear();\n        dispatch( eventLogut() );\n        dispatch( logut() );\n    }\n}\n\nconst logut = () => ({ type: types.authLogout });","import { useState } from 'react'\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [ values, setValues ] = useState( initialState );\n\n    const reset = () => {\n        setValues( initialState );\n    };\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n    }\n\n    return [ values, handleInputChange, reset ];\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: 'nicolasdifabio92@gmail.com',\n        lPassword: '123456',\n    });\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName: 'Nando',\n        rEmail: 'nicolasdifabio9222@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456',\n    });\n\n    const { lEmail, lPassword } = formLoginValues;\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const handleLogin = e => {\n        e.preventDefault();\n        dispatch( startLogin( lEmail, lPassword ) );\n    };\n\n    const handleRegister = e => {\n        e.preventDefault();\n\n        if( rPassword1 !== rPassword2 ) {\n            return Swal.fire('Error', 'Las password deben ser iguales.', 'error' );\n        }\n        dispatch( startRegister( rEmail, rPassword1, rName));\n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit = { handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name = \"lEmail\"\n                                value = { lEmail }\n                                onChange = { handleLoginInputChange }\n\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name = \"lPassword\"\n                                value = { lPassword }\n                                onChange = { handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit = { handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name = \"rName\"\n                                value = { rName }\n                                onChange = { handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name = \"rEmail\"\n                                value = { rEmail }\n                                onChange = { handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name = \"rPassword1\"\n                                value = { rPassword1 }\n                                onChange = { handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name = \"rPassword2\"\n                                value = { rPassword2 }\n                                onChange = { handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogut } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector( state => state.auth );\n\n    const handleLogout = () => {\n        dispatch( startLogut() );\n    };\n\n    return (\n        <div className = \"navbar navbar-dark bg-dark mb-4\">\n            <span className = \"navbar-brand\">\n                { name }\n            </span>\n\n            <button className = \"btn btn-outline-danger\" onClick = { handleLogout }>\n                <i className = \"fas fa-sign-out-alt\"/>\n                <span> Salir</span>\n            </button>\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n    \n    const { title, user } = event;\n    return (\n        <div>\n            <strong>{ title }</strong>\n            <span> - { user.name }</span> \n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours ');\nconst nowPlusOne = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlusOne.toDate()\n}\n\nexport const CalendarModal = () => {\n\n    const dispatch = useDispatch();\n\n    const {activeEvent} = useSelector(state => state.calendar);\n    const {modalOpen} = useSelector(state => state.ui);\n\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowPlusOne.toDate());\n    const [titleValid, setTitleValid] = useState(true)\n    const [formValues, setFormValues] = useState(initEvent);\n\n    const {notes, title, start, end} = formValues;\n\n    useEffect(() => {\n        (activeEvent) ? setFormValues(activeEvent) : setFormValues(initEvent);\n\n    }, [activeEvent, setFormValues]);\n\n    const handleInputChange = ({target}) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        })\n    };\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    };\n\n    const handleEndDateChange = (e) => {\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    };\n\n    const closeModal = () => {\n        // TODO: Cerrar el modal\n        dispatch(uiCloseModal());\n        dispatch(eventClearActiveEvent());\n        setFormValues(initEvent);\n    };\n\n    const handleSubmitForm = e => {\n        e.preventDefault();\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if (title.trim().length < 2) {\n            return setTitleValid(false);\n        }\n\n        if (activeEvent) {\n            dispatch(eventStartUpdate(formValues))\n        } else {\n            // TODO: realizar grabacion\n            dispatch(eventStartAddNew(formValues));\n        }\n\n        setTitleValid(true);\n        closeModal();\n    }\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h1> {activeEvent ? 'Actualizar Evento' : 'Nuevo Evento'} </h1>\n            <hr />\n            <form className=\"container\" onSubmit={handleSubmitForm}>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        className=\"form-control\"\n                        onChange={handleStartDateChange}\n                        value={dateStart}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        className=\"form-control\"\n                        onChange={handleEndDateChange}\n                        value={dateEnd}\n                        minDate={dateStart}\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        value={title}\n                        onChange={handleInputChange}\n                        autoComplete=\"off\"\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    };\n\n    return (\n        <button className = \"btn btn-primary fab\" onClick = { handleClickNew }>\n            <i className = \"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch()\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    };\n    \n    return (\n        <button className = \"btn btn-danger fab-danger\" onClick = { handleDelete }>\n            <i className = \"fas fa-trash\"></i>\n            <span> Borrar Evento</span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\nimport 'moment/locale/es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nmoment.locale('es');\nconst localizer = momentLocalizer( moment ); // or globalizeLocalizer\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    // TODO: Leer eventos\n    const { events, activeEvent } = useSelector( state => state.calendar );\n    const { uid } = useSelector( state => state.auth );\n\n    const [ lasview, setLasview ] = useState(\n        localStorage.getItem('lastView') || 'month'\n    )\n\n    useEffect(() => {\n        dispatch( eventStartLoading() );\n    }, [ dispatch ]);\n\n    const onDoubleClick = e => {\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = e => {\n        dispatch( eventSetActive(e) );\n    }\n\n    const onViewChange = e => {\n        setLasview(e);\n        localStorage.setItem('lastView', e );\n    }\n\n    const onSelectSlot = e => {\n        dispatch( eventClearActiveEvent() );\n    }\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n        const style = {\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n        return {\n            style\n        }\n    }\n\n    return (\n        <div className = \"calendar-screen\">\n            <Navbar/>\n\n            <Calendar\n                localizer = { localizer }\n                events = { events }\n                startAccessor = \"start\"\n                endAccessor = \"end\"\n                messages = { messages }\n                eventPropGetter = { eventStyleGetter }\n                components = {{ event: CalendarEvent }}\n                onDoubleClickEvent = { onDoubleClick }\n                onSelectEvent = { onSelectEvent }\n                onSelectSlot = { onSelectSlot }\n                selectable = { true }\n                onView = { onViewChange }\n                view = { lasview }\n            />\n\n            <AddNewFab />\n\n            {\n                ( activeEvent ) && <DeleteEventFab /> \n            }\n\n            <CalendarModal />\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    localStorage.setItem('lastPath', rest.location.pathname);\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to = \"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const { checking, uid }= useSelector( state => state.auth )\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        \n        dispatch( startChecking() );\n        \n    }, [dispatch]);\n    \n    if( checking ) {\n        return (<h5>Espere...</h5>)\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute exact path = \"/login\" component = { LoginScreen } isAuthenticated = { !!uid } />\n                    <PrivateRoute exact path = \"/\" component = { CalendarScreen } isAuthenticated = { !!uid } />\n                    <Redirect to = \"/\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n        \n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false,\n            }\n\n        default:\n            return state;\n    }\n}","import { types } from '../types/types';\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events:[\n                    ...state.events,\n                    action.payload\n                ]\n            }\n\n        case types.eventClearActiveEnvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n        \n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload ]\n            }\n\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n        \n        default:\n            return state;\n    }\n};","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { AppRouter } from './router/AppRouter';\nimport { store } from './store/store';\n\nexport const CalendarApp = () => {\n    return (\n        <div>\n            <Provider store = { store }>\n                <AppRouter />\n            </Provider>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}